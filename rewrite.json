{"meta":{"generator":"0.9.0","format":20,"date":1618989147650},"custom":{"general":{"name":"General","files":{"Welcome":{"name":"Welcome","type":"md","content":"# Discord Player\nComplete framework to facilitate music commands using **[discord.js](https://discord.js.org)**.\n\n[![downloadsBadge](https://img.shields.io/npm/dt/discord-player?style=for-the-badge)](https://npmjs.com/discord-player)\n[![versionBadge](https://img.shields.io/npm/v/discord-player?style=for-the-badge)](https://npmjs.com/discord-player)\n\n## Installation\n\n### Install **[discord-player](https://npmjs.com/package/discord-player)**\n\n```sh\n$ npm install --save discord-player\n```\n\n### Install **[@discordjs/opus](https://npmjs.com/package/@discordjs/opus)**\n\n```sh\n$ npm install --save @discordjs/opus\n```\n\n### Install FFmpeg or Avconv\n- Official FFMPEG Website: **[https://www.ffmpeg.org/download.html](https://www.ffmpeg.org/download.html)**\n\n- Node Module (FFMPEG): **[https://npmjs.com/package/ffmpeg-static](https://npmjs.com/package/ffmpeg-static)**\n\n- Avconv: **[https://libav.org/download](https://libav.org/download)**\n\n# Features\n- Simple & easy to use ðŸ¤˜\n- Beginner friendly ðŸ˜±\n- Audio filters ðŸŽ¸\n- Lightweight ðŸ›¬\n- Custom extractors support ðŸŒŒ\n- Lyrics ðŸ“ƒ\n- Multiple sources support âœŒ\n- Play in multiple servers at the same time ðŸš—\n\n## [Documentation](https://discord-player.js.org)\n\n## Getting Started\n\nHere is the code you will need to get started with discord-player. Then, you will be able to use `client.player` everywhere in your code!\n\n```js\nconst Discord = require(\"discord.js\"),\nclient = new Discord.Client,\nsettings = {\n    prefix: \"!\",\n    token: \"Your Discord Token\"\n};\n\nconst { Player } = require(\"discord-player\");\n\n// Create a new Player (you don't need any API Key)\nconst player = new Player(client);\n\n// To easily access the player\nclient.player = player;\n\n// add the trackStart event so when a song will be played this message will be sent\nclient.player.on(\"trackStart\", (message, track) => message.channel.send(`Now playing ${track.title}...`))\n\nclient.once(\"ready\", () => {\n    console.log(\"I'm ready !\");\n});\n\nclient.on(\"message\", async (message) => {\n\n    const args = message.content.slice(settings.prefix.length).trim().split(/ +/g);\n    const command = args.shift().toLowerCase();\n\n    // !play Despacito\n    // will play the song \"Despacito\" in the voice channel\n    if(command === \"play\"){\n        client.player.play(message, args[0]);\n        // as we registered the event above, no need to send a success message here\n    }\n\n});\n\nclient.login(settings.token);\n```\n\n## Supported websites\n\nBy default, discord-player supports **YouTube**, **Spotify** and **SoundCloud** streams only.\n\n### Optional dependencies\n\nDiscord Player provides an **Extractor API** that enables you to use your custom stream extractor with it. Some packages have been made by the community to add new features using this API.\n\n#### [@discord-player/extractor](https://github.com/Snowflake107/discord-player-extractors) (optional)\n\nOptional package that adds support for `vimeo`, `reverbnation`, `facebook`, `attachment links` and `lyrics`.\nYou just need to install it using `npm i --save @discord-player/extractor` (discord-player will automatically detect and use it).\n\n#### [@discord-player/downloader](https://github.com/DevSnowflake/discord-player-downloader) (optional)\n\n`@discord-player/downloader` is an optional package that brings support for +700 websites. The documentation is available [here](https://github.com/DevSnowflake/discord-player-downloader).\n\n## Examples of bots made with Discord Player\n\nThese bots are made by the community, they can help you build your own!\n\n* [AtlantaBot](https://github.com/Androz2091/AtlantaBot) by [Androz2091](https://github.com/Androz2091)\n* [Discord-Music](https://github.com/inhydrox/discord-music) by [inhydrox](https://github.com/inhydrox)\n* [Music-bot](https://github.com/ZerioDev/Music-bot) by [ZerioDev](https://github.com/ZerioDev)\n\n## FAQ\n\n### How to use cookies\n\n```js\nconst player = new Player(client, {\n    ytdlDownloadOptions: {\n        requestOptions: {\n            headers: {\n                cookie: \"YOUR_YOUTUBE_COOKIE\"\n            }\n        }\n    }\n});\n```\n\n### How to use custom proxies\n\n```js\nconst HttpsProxyAgent = require(\"https-proxy-agent\");\n\n// Remove \"user:pass@\" if you don't need to authenticate to your proxy.\nconst proxy = \"http://user:pass@111.111.111.111:8080\";\nconst agent = HttpsProxyAgent(proxy);\n\nconst player = new Player(client, {\n    ytdlDownloadOptions: {\n        requestOptions: { agent }\n    }\n});\n```\n","path":"docs/general/Welcome.md"}}},"extractors":{"name":"Extractors","files":{"extractor":{"name":"Extractors","type":"md","content":"# Discord Player Extractor API\nThe Extractor API allows you to build your own stream extractor for **Discord Player**.\n\n# Example Extractor\nYour extractor should have 2 methods (required):\n - `validate(query): boolean`\n   \n   This method is called by Discord Player while validating the query provided via `Player.play()`. (Note that only `string` queries are passed to your extractor)\n\n - `getInfo(query): object`\n   \n   This method is used by Discord Player to create `Track` object. You can return your data here that gets passed to `Track`.\n   Your info must be similar to this:\n\n    ```js\n    {\n        // the title\n        title: \"Extracted by custom extractor\",\n        // the duration in ms\n        duration: 20000,\n        // the thumbnail\n        thumbnail: data.thumbnail,\n        // engine, can be Readable streams or link to raw stream that gets played\n        engine: data.streamURL,\n        // number of views\n        views: 0,\n        // author of this stream\n        author: data.artist.name,\n        // description\n        description: \"\",\n        // link of this stream\n        url: data.url\n    }\n    ```\n - `important: boolean`\n   \n   You can mark your Extractor as `important` by adding `important: true` to your extractor object. Doing this will disable rest of the extractors that comes after your extractor and use your extractor to get data. By default, it is set to `false`.\n\n - `version: string`\n\n   This should be the version of your extractor. It is not really important and is set to `0.0.0` by default.\n\n# Examples\n### You can check out **[@discord-player/extractor](https://github.com/Snowflake107/discord-player-extractors)**","path":"docs/extractors/extractor.md"}}}},"classes":[{"name":"Player","construct":{"name":"Player","description":"<p>Creates new Player instance</p>","params":[{"name":"client","description":"<p>The discord.js client</p>","type":[[["DiscordClient"]]]},{"name":"options","description":"<p>Player options</p>","type":[[["PlayerOptionsType"]]]}]},"props":[{"name":"queues","description":"<p>The collection of queues in this player</p>","type":[[["DiscordCollection"]]],"meta":{"line":46,"file":"Player.ts","path":"src"}},{"name":"Extractors","description":"<p>The extractor model collection</p>","type":[[["DiscordCollection"]]],"meta":{"line":54,"file":"Player.ts","path":"src"}}],"methods":[{"name":"use","description":"<p>Define custom extractor in this player</p>","params":[{"name":"extractorName","description":"<p>The extractor name</p>","type":[[["String"]]]},{"name":"extractor","description":"<p>The extractor itself</p>","type":[[["any"]]]}],"meta":{"line":93,"file":"Player.ts","path":"src"}},{"name":"unuse","description":"<p>Remove existing extractor from this player</p>","params":[{"name":"extractorName","description":"<p>The extractor name</p>","type":[[["String"]]]}],"meta":{"line":113,"file":"Player.ts","path":"src"}},{"name":"play","description":"<p>Play a song</p>","examples":["await player.play(message, \"never gonna give you up\", true)"],"params":[{"name":"message","description":"<p>The discord.js message object</p>","type":[[["DiscordMessage"]]]},{"name":"query","description":"<p>Search query, can be <code>Player.Track</code> instance</p>","type":[[["string"]],[["Track"]]]},{"name":"firstResult","description":"<p>If it should play the first result</p>","optional":true,"type":[[["Boolean"]]]}],"async":true,"meta":{"line":366,"file":"Player.ts","path":"src"}},{"name":"isPlaying","description":"<p>Checks if this player is playing in a server</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":451,"file":"Player.ts","path":"src"}},{"name":"getQueue","description":"<p>Returns guild queue object</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":459,"file":"Player.ts","path":"src"}},{"name":"setFilters","description":"<p>Sets audio filters in this player</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"newFilters","description":"<p>Audio filters object</p>","type":[[["QueueFilters"]]]}],"meta":{"line":467,"file":"Player.ts","path":"src"}},{"name":"setPosition","description":"<p>Sets track position</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"time","description":"<p>Time in ms to set</p>","type":[[["Number"]]]}],"meta":{"line":525,"file":"Player.ts","path":"src"}},{"name":"seek","description":"<p>Sets track position</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"time","description":"<p>Time in ms to set</p>","type":[[["Number"]]]}],"meta":{"line":525,"file":"Player.ts","path":"src"}},{"name":"skip","description":"<p>Skips current track</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":534,"file":"Player.ts","path":"src"}},{"name":"moveTo","description":"<p>Moves to a new voice channel</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"channel","description":"<p>New voice channel to move to</p>","type":[[["DiscordVoiceChannel"]]]}],"meta":{"line":555,"file":"Player.ts","path":"src"}},{"name":"pause","description":"<p>Pause the playback</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":582,"file":"Player.ts","path":"src"}},{"name":"resume","description":"<p>Resume the playback</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":602,"file":"Player.ts","path":"src"}},{"name":"stop","description":"<p>Stops the player</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":622,"file":"Player.ts","path":"src"}},{"name":"setVolume","description":"<p>Sets music volume</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"percent","description":"<p>The volume percentage/amount to set</p>","type":[[["Number"]]]}],"meta":{"line":646,"file":"Player.ts","path":"src"}},{"name":"clearQueue","description":"<p>Clears the queue</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":668,"file":"Player.ts","path":"src"}},{"name":"back","description":"<p>Plays previous track</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":684,"file":"Player.ts","path":"src"}},{"name":"setRepeatMode","description":"<p>Sets repeat mode</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"enabled","description":"<p>If it should enable the repeat mode</p>","type":[[["Boolean"]]]}],"meta":{"line":706,"file":"Player.ts","path":"src"}},{"name":"setLoopMode","description":"<p>Sets loop mode</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"enabled","description":"<p>If it should enable the loop mode</p>","type":[[["Boolean"]]]}],"meta":{"line":723,"file":"Player.ts","path":"src"}},{"name":"nowPlaying","description":"<p>Returns currently playing track</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":740,"file":"Player.ts","path":"src"}},{"name":"shuffle","description":"<p>Shuffles the queue</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":754,"file":"Player.ts","path":"src"}},{"name":"remove","description":"<p>Removes specified track</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"track","description":"<p>The track object/id to remove</p>","type":[[["Track"]],[["number"]]]}],"meta":{"line":777,"file":"Player.ts","path":"src"}},{"name":"getTimeCode","description":"<p>Returns time code of currently playing song</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"queueTime","description":"<p>If it should make the time code of the whole queue</p>","optional":true,"type":[[["Boolean"]]]}],"meta":{"line":805,"file":"Player.ts","path":"src"}},{"name":"createProgressBar","description":"<p>Creates progressbar</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"options","description":"<p>Progressbar options</p>","optional":true,"type":[[["PlayerProgressbarOptions"]]]}],"meta":{"line":829,"file":"Player.ts","path":"src"}},{"name":"lyrics","description":"<p>Gets lyrics of a song</p>","examples":["const lyrics = await player.lyrics(\"alan walker faded\")\nmessage.channel.send(lyrics.lyrics);"],"params":[{"name":"query","description":"<p>Search query</p>","type":[[["String"]]]}],"async":true,"meta":{"line":877,"file":"Player.ts","path":"src"}},{"name":"setAutoPlay","description":"<p>Toggle autoplay for youtube streams</p>","params":[{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]},{"name":"enable","description":"<p>Enable/Disable autoplay</p>","type":[[["Boolean"]]]}],"meta":{"line":893,"file":"Player.ts","path":"src"}},{"name":"getStats","description":"<p>Player stats</p>","meta":{"line":907,"file":"Player.ts","path":"src"}}],"events":[{"name":"trackStart","description":"<p>Emitted when a track starts</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]},{"name":"track","description":"<p>The track</p>","type":[[["Track"]]]},{"name":"queue","description":"<p>The queue</p>","type":[[["Queue"]]]}],"meta":{"line":1184,"file":"Player.ts","path":"src"}},{"name":"queueCreate","description":"<p>Emitted when a playlist is started</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]},{"name":"queue","description":"<p>The queue</p>","type":[[["Queue"]]]}],"meta":{"line":1192,"file":"Player.ts","path":"src"}},{"name":"searchResults","description":"<p>Emitted when the bot is awaiting search results</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]},{"name":"query","description":"<p>The query</p>","type":[[["String"]]]},{"name":"tracks","description":"<p>The tracks</p>","type":[[["Array","<"],["Track",">"]]]},{"name":"collector","description":"<p>The collector</p>","type":[[["DiscordCollector"]]]}],"meta":{"line":1199,"file":"Player.ts","path":"src"}},{"name":"searchInvalidResponse","description":"<p>Emitted when the user has sent an invalid response for search results</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]},{"name":"query","description":"<p>The query</p>","type":[[["String"]]]},{"name":"tracks","description":"<p>The tracks</p>","type":[[["Array","<"],["Track",">"]]]},{"name":"invalidResponse","description":"<p>The <code>invalidResponse</code> string</p>","type":[[["String"]]]},{"name":"collector","description":"<p>The collector</p>","type":[[["DiscordMessageCollector"]]]}],"meta":{"line":1208,"file":"Player.ts","path":"src"}},{"name":"searchCancel","description":"<p>Emitted when the bot has stopped awaiting search results (timeout)</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]},{"name":"query","description":"<p>The query</p>","type":[[["String"]]]},{"name":"tracks","description":"<p>The tracks</p>","type":[[["Array","<"],["Track",">"]]]}],"meta":{"line":1218,"file":"Player.ts","path":"src"}},{"name":"noResults","description":"<p>Emitted when the bot can't find related results to the query</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]},{"name":"query","description":"<p>The query</p>","type":[[["String"]]]}],"meta":{"line":1226,"file":"Player.ts","path":"src"}},{"name":"botDisconnect","description":"<p>Emitted when the bot is disconnected from the channel</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":1233,"file":"Player.ts","path":"src"}},{"name":"channelEmpty","description":"<p>Emitted when the channel of the bot is empty</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]},{"name":"queue","description":"<p>The queue</p>","type":[[["Queue"]]]}],"meta":{"line":1239,"file":"Player.ts","path":"src"}},{"name":"queueEnd","description":"<p>Emitted when the queue of the server is ended</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]},{"name":"queue","description":"<p>The queue</p>","type":[[["Queue"]]]}],"meta":{"line":1246,"file":"Player.ts","path":"src"}},{"name":"trackAdd","description":"<p>Emitted when a track is added to the queue</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]},{"name":"queue","description":"<p>The queue</p>","type":[[["Queue"]]]},{"name":"track","description":"<p>The track</p>","type":[[["Track"]]]}],"meta":{"line":1253,"file":"Player.ts","path":"src"}},{"name":"playlistAdd","description":"<p>Emitted when a playlist is added to the queue</p>","params":[{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]},{"name":"queue","description":"<p>The queue</p>","type":[[["Queue"]]]},{"name":"playlist","description":"<p>The playlist</p>","type":[[["Object"]]]}],"meta":{"line":1261,"file":"Player.ts","path":"src"}},{"name":"error","description":"<p>Emitted when an error is triggered</p>","params":[{"name":"error","description":"<p>It can be <code>NotConnected</code>, <code>UnableToJoin</code>, <code>NotPlaying</code>, <code>ParseError</code>, <code>LiveVideo</code> or <code>VideoUnavailable</code>.</p>","type":[[["String"]]]},{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":1269,"file":"Player.ts","path":"src"}},{"name":"playlistParseStart","description":"<p>Emitted when discord-player attempts to parse playlist contents (mostly soundcloud playlists)</p>","params":[{"name":"playlist","description":"<p>Raw playlist (unparsed)</p>","type":[[["Object"]]]},{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":1276,"file":"Player.ts","path":"src"}},{"name":"playlistParseEnd","description":"<p>Emitted when discord-player finishes parsing playlist contents (mostly soundcloud playlists)</p>","params":[{"name":"playlist","description":"<p>The playlist data (parsed)</p>","type":[[["Object"]]]},{"name":"message","description":"<p>The message</p>","type":[[["DiscordMessage"]]]}],"meta":{"line":1283,"file":"Player.ts","path":"src"}}],"meta":{"line":60,"file":"Player.ts","path":"src"}},{"name":"ExtractorModel","construct":{"name":"ExtractorModel","description":"<p>Model for raw Discord Player extractors</p>","params":[{"name":"extractorName","description":"<p>Name of the extractor</p>","type":[[["String"]]]},{"name":"data","description":"<p>Extractor object</p>","type":[[["Object"]]]}]},"props":[{"name":"name","description":"<p>The extractor name</p>","type":[[["String"]]],"meta":{"line":13,"file":"ExtractorModel.ts","path":"src/Structures"}},{"name":"version","description":"<p>The extractor version</p>","type":[[["String"]]],"meta":{"line":50,"file":"ExtractorModel.ts","path":"src/Structures"}},{"name":"important","description":"<p>If player should mark this extractor as important</p>","type":[[["Boolean"]]],"meta":{"line":58,"file":"ExtractorModel.ts","path":"src/Structures"}}],"methods":[{"name":"handle","description":"<p>Method to handle requests from <code>Player.play()</code></p>","params":[{"name":"query","description":"<p>Query to handle</p>","type":[[["String"]]]}],"async":true,"meta":{"line":22,"file":"ExtractorModel.ts","path":"src/Structures"}},{"name":"validate","description":"<p>Method used by Discord Player to validate query with this extractor</p>","params":[{"name":"query","description":"<p>The query to validate</p>","type":[[["String"]]]}],"meta":{"line":42,"file":"ExtractorModel.ts","path":"src/Structures"}}],"meta":{"line":7,"file":"ExtractorModel.ts","path":"src/Structures"}},{"name":"Queue","construct":{"name":"Queue","description":"<p>Queue constructor</p>","params":[{"name":"player","description":"<p>The player that instantiated this Queue</p>","type":[[["Player"]]]},{"name":"message","description":"<p>The message object</p>","type":[[["DiscordMessage"]]]}]},"props":[{"name":"autoPlay","description":"<p>If autoplay is enabled in this queue</p>","type":[[["boolean"]]],"meta":{"line":28,"file":"Queue.ts","path":"src/Structures"}},{"name":"guildID","description":"<p>ID of the guild assigned to this queue</p>","type":[[["DiscordSnowflake"]]],"meta":{"line":44,"file":"Queue.ts","path":"src/Structures"}},{"name":"voiceConnection","description":"<p>The voice connection of this queue</p>","type":[[["DiscordVoiceConnection"]]],"meta":{"line":50,"file":"Queue.ts","path":"src/Structures"}},{"name":"tracks","description":"<p>Tracks of this queue</p>","type":[[["Array","<"],["Track",">"]]],"meta":{"line":56,"file":"Queue.ts","path":"src/Structures"}},{"name":"previousTracks","description":"<p>Previous tracks of this queue</p>","type":[[["Array","<"],["Track",">"]]],"meta":{"line":62,"file":"Queue.ts","path":"src/Structures"}},{"name":"stopped","description":"<p>If the player of this queue is stopped</p>","type":[[["boolean"]]],"meta":{"line":68,"file":"Queue.ts","path":"src/Structures"}},{"name":"lastSkipped","description":"<p>If last track was skipped</p>","type":[[["boolean"]]],"meta":{"line":74,"file":"Queue.ts","path":"src/Structures"}},{"name":"volume","description":"<p>Queue volume</p>","type":[[["Number"]]],"meta":{"line":80,"file":"Queue.ts","path":"src/Structures"}},{"name":"paused","description":"<p>If the player of this queue is paused</p>","type":[[["boolean"]]],"meta":{"line":86,"file":"Queue.ts","path":"src/Structures"}},{"name":"repeatMode","description":"<p>If repeat mode is enabled in this queue</p>","type":[[["boolean"]]],"meta":{"line":92,"file":"Queue.ts","path":"src/Structures"}},{"name":"loopMode","description":"<p>If loop mode is enabled in this queue</p>","type":[[["boolean"]]],"meta":{"line":98,"file":"Queue.ts","path":"src/Structures"}},{"name":"additionalStreamTime","description":"<p>The additional calculated stream time</p>","type":[[["Number"]]],"meta":{"line":104,"file":"Queue.ts","path":"src/Structures"}},{"name":"firstMessage","description":"<p>The initial message object</p>","type":[[["DiscordMessage"]]],"meta":{"line":110,"file":"Queue.ts","path":"src/Structures"}},{"name":"filters","description":"<p>The audio filters in this queue</p>","type":[[["QueueFilters"]]],"meta":{"line":116,"file":"Queue.ts","path":"src/Structures"}},{"name":"playing","description":"<p>Currently playing track</p>","type":[[["Track"]]],"meta":{"line":127,"file":"Queue.ts","path":"src/Structures"}},{"name":"calculatedVolume","description":"<p>Calculated volume of this queue</p>","type":[[["Number"]]],"meta":{"line":135,"file":"Queue.ts","path":"src/Structures"}},{"name":"totalTime","description":"<p>Total duration</p>","type":[[["Number"]]],"meta":{"line":143,"file":"Queue.ts","path":"src/Structures"}},{"name":"currentStreamTime","description":"<p>Current stream time</p>","type":[[["Number"]]],"meta":{"line":151,"file":"Queue.ts","path":"src/Structures"}}],"methods":[{"name":"setFilters","description":"<p>Sets audio filters in this player</p>","params":[{"name":"filters","description":"<p>Audio filters to set</p>","type":[[["QueueFilters"]]]}],"meta":{"line":159,"file":"Queue.ts","path":"src/Structures"}},{"name":"getFiltersEnabled","description":"<p>Returns array of all enabled filters</p>","meta":{"line":168,"file":"Queue.ts","path":"src/Structures"}},{"name":"getFiltersDisabled","description":"<p>Returns all disabled filters</p>","meta":{"line":182,"file":"Queue.ts","path":"src/Structures"}},{"name":"toString","description":"<p>String representation of this Queue</p>","meta":{"line":192,"file":"Queue.ts","path":"src/Structures"}}],"meta":{"line":34,"file":"Queue.ts","path":"src/Structures"}},{"name":"Track","construct":{"name":"Track","description":"<p>Track constructor</p>","params":[{"name":"player","description":"<p>The player that instantiated this Track</p>","type":[[["Player"]]]},{"name":"data","description":"<p>Track data</p>","type":[[["TrackData"]]]}]},"props":[{"name":"queue","description":"<p>The queue in which this track is located</p>","type":[[["Queue"]]],"meta":{"line":99,"file":"Track.ts","path":"src/Structures"}},{"name":"durationMS","description":"<p>The track duration in millisecond</p>","type":[[["Number"]]],"meta":{"line":107,"file":"Track.ts","path":"src/Structures"}}],"methods":[{"name":"toString","description":"<p>String representation of this track</p>","meta":{"line":125,"file":"Track.ts","path":"src/Structures"}}],"meta":{"line":73,"file":"Track.ts","path":"src/Structures"}},{"name":"Util","construct":{"name":"Util","description":"<p>Static Player Util class</p>"},"methods":[{"name":"getFFmpegVersion","description":"<p>Checks FFmpeg Version</p>","scope":"static","params":[{"name":"force","description":"<p>If it should forcefully get the version</p>","optional":true,"type":[[["Boolean"]]]}],"meta":{"line":25,"file":"Util.ts","path":"src/utils"}},{"name":"checkFFmpeg","description":"<p>Checks FFmpeg</p>","scope":"static","params":[{"name":"force","description":"<p>If it should forcefully get the version</p>","optional":true,"type":[[["Boolean"]]]}],"meta":{"line":39,"file":"Util.ts","path":"src/utils"}},{"name":"alertFFmpeg","description":"<p>Alerts if FFmpeg is not available</p>","scope":"static","meta":{"line":48,"file":"Util.ts","path":"src/utils"}},{"name":"getQueryType","description":"<p>Resolves query type</p>","scope":"static","params":[{"name":"query","description":"<p>The query</p>","type":[[["String"]]]}],"meta":{"line":60,"file":"Util.ts","path":"src/utils"}},{"name":"isURL","description":"<p>Checks if the given string is url</p>","scope":"static","params":[{"name":"str","description":"<p>URL to check</p>","type":[[["String"]]]}],"meta":{"line":80,"file":"Util.ts","path":"src/utils"}},{"name":"getVimeoID","description":"<p>Returns Vimeo ID</p>","scope":"static","params":[{"name":"query","description":"<p>Vimeo link</p>","type":[[["String"]]]}],"meta":{"line":88,"file":"Util.ts","path":"src/utils"}},{"name":"parseMS","description":"<p>Parses ms time</p>","scope":"static","params":[{"name":"milliseconds","description":"<p>Time to parse</p>","type":[[["Number"]]]}],"meta":{"line":101,"file":"Util.ts","path":"src/utils"}},{"name":"durationString","description":"<p>Creates simple duration string</p>","scope":"static","params":[{"name":"durObj","description":"<p>Duration object</p>","type":[[["object"]]]}],"meta":{"line":116,"file":"Util.ts","path":"src/utils"}},{"name":"ytSearch","description":"<p>Makes youtube searches</p>","scope":"static","params":[{"name":"query","description":"<p>The query</p>","type":[[["String"]]]},{"name":"options","description":"<p>Options</p>","type":[[["any"]]]}],"returns":[[["Promise","<"],["Array","<"],["Track",">>"]]],"meta":{"line":126,"file":"Util.ts","path":"src/utils"}},{"name":"isRepl","description":"<p>Checks if this system is running in replit.com</p>","scope":"static","meta":{"line":162,"file":"Util.ts","path":"src/utils"}},{"name":"isVoiceEmpty","description":"<p>Checks if the given voice channel is empty</p>","scope":"static","params":[{"name":"channel","description":"<p>The voice channel</p>","type":[[["DiscordVoiceChannel"]]]}],"meta":{"line":183,"file":"Util.ts","path":"src/utils"}},{"name":"buildTimeCode","description":"<p>Builds time code</p>","scope":"static","params":[{"name":"data","description":"<p>The data to build time code from</p>","type":[[["object"]]]}],"meta":{"line":191,"file":"Util.ts","path":"src/utils"}},{"name":"require","description":"<p>Manage CJS require</p>","scope":"static","params":[{"name":"id","description":"<p>id to require</p>","type":[[["String"]]]}],"meta":{"line":207,"file":"Util.ts","path":"src/utils"}}],"meta":{"line":18,"file":"Util.ts","path":"src/utils"}}],"interfaces":[],"typedefs":[{"name":"PlayerOptions","type":[[["Object"]]],"props":[{"name":"leaveOnEnd","description":"<p>If it should leave on queue end</p>","optional":true,"default":false,"type":[[["Boolean"]]]},{"name":"leaveOnEndCooldown","description":"<p>Time in ms to wait before executing <code>leaveOnEnd</code></p>","optional":true,"default":0,"type":[[["Number"]]]},{"name":"leaveOnStop","description":"<p>If it should leave on stop command</p>","optional":true,"default":false,"type":[[["Boolean"]]]},{"name":"leaveOnEmpty","description":"<p>If it should leave on empty voice channel</p>","optional":true,"default":false,"type":[[["Boolean"]]]},{"name":"leaveOnEmptyCooldown","description":"<p>Time in ms to wait before executing <code>leaveOnEmpty</code></p>","optional":true,"default":0,"type":[[["Number"]]]},{"name":"autoSelfDeaf","description":"<p>If it should set the client to <code>self deaf</code> mode on joining</p>","optional":true,"default":false,"type":[[["Boolean"]]]},{"name":"enableLive","description":"<p>If it should enable live videos support</p>","optional":true,"default":false,"type":[[["Boolean"]]]},{"name":"ytdlDownloadOptions","description":"<p>The download options passed to <code>ytdl-core</code></p>","optional":true,"default":"{}","type":[[["YTDLDownloadOptions"]]]},{"name":"useSafeSearch","description":"<p>If it should use <code>safe search</code> method for youtube searches</p>","optional":true,"default":false,"type":[[["Boolean"]]]}],"meta":{"line":1290,"file":"Player.ts","path":"src"}},{"name":"TrackSource","type":[[["soundcloud","'"]],[["youtube","'"]],[["arbitrary","'"]]],"meta":{"line":1303,"file":"Player.ts","path":"src"}},{"name":"TrackData","type":[[["Object"]]],"props":[{"name":"title","description":"<p>The title</p>","type":[[["String"]]]},{"name":"description","description":"<p>The description</p>","type":[[["String"]]]},{"name":"author","description":"<p>The author</p>","type":[[["String"]]]},{"name":"url","description":"<p>The url</p>","type":[[["String"]]]},{"name":"duration","description":"<p>The duration</p>","type":[[["String"]]]},{"name":"views","description":"<p>The view count</p>","type":[[["Number"]]]},{"name":"requestedBy","description":"<p>The user who requested this track</p>","type":[[["DiscordUser"]]]},{"name":"fromPlaylist","description":"<p>If this track came from a playlist</p>","type":[[["Boolean"]]]},{"name":"source","description":"<p>The track source</p>","optional":true,"type":[[["TrackSource"]]]},{"name":"engine","description":"<p>The stream engine</p>","optional":true,"type":[[["string"]],[["Readable"]]]},{"name":"live","description":"<p>If this track is livestream instance</p>","optional":true,"default":false,"type":[[["Boolean"]]]}],"meta":{"line":1307,"file":"Player.ts","path":"src"}},{"name":"QueueFilters","description":"<p>The FFmpeg Filters</p>","type":[[["Object"]]],"meta":{"line":1322,"file":"Player.ts","path":"src"}},{"name":"QueryType","description":"<p>The query type</p>","type":[[["soundcloud_track","'"]],[["soundcloud_playlist","'"]],[["spotify_song","'"]],[["spotify_album","'"]],[["spotify_playlist","'"]],[["youtube_video","'"]],[["youtube_playlist","'"]],[["vimeo","'"]],[["facebook","'"]],[["reverbnation","'"]],[["attachment","'"]],[["youtube_search","'"]]],"meta":{"line":1327,"file":"Player.ts","path":"src"}},{"name":"ExtractorModelData","type":[[["Object"]]],"props":[{"name":"title","description":"<p>The title</p>","type":[[["String"]]]},{"name":"duration","description":"<p>The duration in ms</p>","type":[[["Number"]]]},{"name":"thumbnail","description":"<p>The thumbnail url</p>","type":[[["String"]]]},{"name":"engine","description":"<p>The audio engine</p>","type":[[["string"]],[["Readable"]]]},{"name":"views","description":"<p>The views count of this stream</p>","type":[[["Number"]]]},{"name":"author","description":"<p>The author</p>","type":[[["String"]]]},{"name":"description","description":"<p>The description</p>","type":[[["String"]]]},{"name":"url","description":"<p>The url</p>","type":[[["String"]]]},{"name":"version","description":"<p>The extractor version</p>","optional":true,"default":"'0.0.0'","type":[[["String"]]]},{"name":"important","description":"<p>Mark as important</p>","optional":true,"default":false,"type":[[["Boolean"]]]}],"meta":{"line":1331,"file":"Player.ts","path":"src"}},{"name":"PlayerProgressbarOptions","type":[[["Object"]]],"props":[{"name":"timecodes","description":"<p>If it should return progres bar with time codes</p>","optional":true,"type":[[["Boolean"]]]},{"name":"queue","description":"<p>if it should return the progress bar of the whole queue</p>","optional":true,"type":[[["Boolean"]]]},{"name":"length","description":"<p>The length of progress bar to build</p>","optional":true,"type":[[["Number"]]]}],"meta":{"line":1345,"file":"Player.ts","path":"src"}},{"name":"LyricsData","type":[[["Object"]]],"props":[{"name":"title","description":"<p>The title of the lyrics</p>","type":[[["String"]]]},{"name":"id","description":"<p>The song id</p>","type":[[["Number"]]]},{"name":"thumbnail","description":"<p>The thumbnail</p>","type":[[["String"]]]},{"name":"image","description":"<p>The image</p>","type":[[["String"]]]},{"name":"url","description":"<p>The url</p>","type":[[["String"]]]},{"name":"artist","description":"<p>The artust info</p>","type":[[["Object"]]]},{"name":"artist.name","description":"<p>The name of the artist</p>","optional":true,"type":[[["String"]]]},{"name":"artist.id","description":"<p>The ID of the artist</p>","optional":true,"type":[[["Number"]]]},{"name":"artist.url","description":"<p>The profile link of the artist</p>","optional":true,"type":[[["String"]]]},{"name":"artist.image","description":"<p>The artist image url</p>","optional":true,"type":[[["String"]]]},{"name":"lyrics","description":"<p>The lyrics</p>","nullable":true,"type":[[["String"]]]}],"meta":{"line":1352,"file":"Player.ts","path":"src"}},{"name":"PlayerStats","type":[[["Object"]]],"props":[{"name":"uptime","description":"<p>The uptime in ms</p>","type":[[["Number"]]]},{"name":"connections","description":"<p>The number of connections</p>","type":[[["Number"]]]},{"name":"users","description":"<p>The number of users</p>","type":[[["Number"]]]},{"name":"queues","description":"<p>The number of queues</p>","type":[[["Number"]]]},{"name":"extractors","description":"<p>The number of custom extractors registered</p>","type":[[["Number"]]]},{"name":"versions","description":"<p>The versions metadata</p>","type":[[["Object"]]]},{"name":"versions.ffmpeg","description":"<p>The ffmpeg version</p>","optional":true,"type":[[["String"]]]},{"name":"versions.node","description":"<p>The node version</p>","optional":true,"type":[[["String"]]]},{"name":"versions.v8","description":"<p>The v8 JavaScript engine version</p>","optional":true,"type":[[["String"]]]},{"name":"system","description":"<p>The system data</p>","type":[[["Object"]]]},{"name":"system.arch","description":"<p>The system arch</p>","optional":true,"type":[[["String"]]]},{"name":"system.platform","description":"<p>The system platform</p>","optional":true,"type":[[["aix","'"]],[["android","'"]],[["darwin","'"]],[["freebsd","'"]],[["linux","'"]],[["openbsd","'"]],[["sunos","'"]],[["win32","'"]],[["cygwin","'"]],[["netbsd","'"]]]},{"name":"system.cpu","description":"<p>The cpu count</p>","optional":true,"type":[[["Number"]]]},{"name":"system.memory","description":"<p>The memory info</p>","optional":true,"type":[[["Object"]]]},{"name":"system.memory.total","description":"<p>The total memory</p>","optional":true,"type":[[["String"]]]},{"name":"system.memory.usage","description":"<p>The memory usage</p>","optional":true,"type":[[["String"]]]},{"name":"system.memory.rss","description":"<p>The memory usage in RSS</p>","optional":true,"type":[[["String"]]]},{"name":"system.memory.arrayBuffers","description":"<p>The memory usage in ArrayBuffers</p>","optional":true,"type":[[["String"]]]},{"name":"system.uptime","description":"<p>The system uptime</p>","optional":true,"type":[[["Number"]]]}],"meta":{"line":1367,"file":"Player.ts","path":"src"}},{"name":"TimeData","type":[[["Object"]]],"props":[{"name":"days","description":"<p>The time in days</p>","type":[[["Number"]]]},{"name":"hours","description":"<p>The time in hours</p>","type":[[["Number"]]]},{"name":"minutes","description":"<p>The time in minutes</p>","type":[[["Number"]]]},{"name":"seconds","description":"<p>The time in seconds</p>","type":[[["Number"]]]}],"meta":{"line":1390,"file":"Player.ts","path":"src"}}],"externals":[]}